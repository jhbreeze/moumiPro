<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">
	<select id="seq" resultType="Long">
		SELECT commuity_seq.NEXTVAL FROM dual
	</select>
	
	<insert id="insertBoard" parameterType="com.moumi.app.board.Board">
		INSERT INTO community(communityNum,userCode,subject,content,regDate,hitCount,brandName,
			brandNum,nickName)
		 VALUES(#{communityNum},#{userCode},#{subject},#{content},SYSDATE,0,#{brandName},#{brandNum},#{nickName})
	</insert>
	<insert id="insertFile" parameterType="com.moumi.app.board.Board">
		INSERT INTO communityFile(fileNum,communityNum,fileName)
			VALUES(commuityFile_seq.NEXTVAL,#{communityNum},#{fileName, jdbcType=VARCHAR})
	</insert>
	
	<sql id="where-list">
		<if test="condition=='all' ">
			( INSTR(subject, #{keyword}) &gt; 0
				OR DBMS_LOB.INSTR(content, #{keyword}) &gt; 0 )
		</if>
		<if test="condition=='subject' ">
			INSTR(subject, #{keyword}) &gt; 0
		</if>
		<if test="condition=='content' ">
			DBMS_LOB.INSTR(content, #{keyword}) &gt; 0
		</if>
		<if test="condition=='userName' ">
			userName=#{keyword}
		</if>
		<if test="condition=='reg_date' ">
			( TO_CHAR(b.reg_date, 'YYYY-MM-DD') = #{keyword}
				OR TO_CHAR(b.reg_date, 'YYYYMMDD') = #{keyword} )
		</if>
	</sql>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*),0) FROM community c
		JOIN member m ON c.userCode = m.userCode
		<where>
			<if test = "keyword!=null and keyword!=''">
				<include refid = "where-list"/>
			</if>
		</where>
	</select>
	
	<select id="listBoard" parameterType="map" resultType="com.moumi.app.board.Board">
		SELECT c.communityNum,c.userCode,c.nickName,subject,TO_CHAR(c.regDate,'YYYY-MM-DD') regDate,
			hitCount,NVL(replyCount,0) replyCount
		FROM community c
		JOIN member m ON c.userCode = m.userCode
		LEFT OUTER JOIN (
			SELECT communityNum,COUNT(*) replyCount FROM reply
			WHERE parent = 0
			GROUP BY communityNum
		) r ON c.communityNum = r.communityNum 
		<where>
			<if test = "keyword!=null and keyword!=''">
				<include refid = "where-list"/>
			</if>
		</where>
		ORDER BY communityNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<select id="readBoard" parameterType="Long" resultType="com.moumi.app.board.Board">
		SELECT c.communityNum,c.nickName,c.userCode,subject,content,hitCount,c.regDate,NVL(boardLikeCount,0)
		 boardLikeCount,brandName
		FROM community c
		JOIN member m ON c.userCode = m.userCode
		LEFT OUTER JOIN (
			SELECT communityNum,COUNT(*) boardLikeCount FROM pick
			GROUP BY communityNum
		) bc ON c.communityNum = bc.communityNum
		WHERE c.communityNum = #{communityNum}
	</select>
	
	<update id="updateHitCount" parameterType="Long">
		UPDATE community SET hitCount = hitCount + 1 WHERE communityNum = #{num}
	</update>
	
	<select id="preReadBoard" parameterType="map" resultType="com.moumi.app.board.Board">
		SELECT communityNum,subject
		FROM community c
		JOIN member m ON c.userCode = m.userCode
		<where>
			<if test="keyword != null and keyword != '' ">
				<include refid="where-list"/>
			</if>
			AND (communityNum &gt; #{communityNum})
		</where>
		ORDER BY communityNum ASC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<select id="nextReadBoard" parameterType="map" resultType="com.moumi.app.board.Board">
		SELECT communityNum,subject
		FROM community c
		JOIN member m ON c.userCode = m.userCode
		<where>
			<if test="keyword != null and keyword != '' ">
				<include refid="where-list"/>
			</if>
			AND (communityNum &lt; #{communityNum})
		</where>
		ORDER BY communityNum DESC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<update id="updateBoard" parameterType="com.moumi.app.board.Board">
		UPDATE community SET subject=#{subject}, content=#{content}, brandName=#{brandName},brandNum=#{brandNum}
		WHERE communityNum = #{communityNum}
	</update>
	
	<delete id="deleteBoard" parameterType="Long">
		DELETE FROM community WHERE communityNum = #{communityNum}
	</delete>
	
	
	<insert id="insertBoardLike" parameterType="map">
		INSERT INTO pick(communityNum, userCode) VALUES (#{communityNum}, #{userCode})
	</insert>

	
	<delete id="deleteBoardLike" parameterType="map">
		DELETE FROM pick WHERE communityNum = #{communityNum} AND userCode = #{userCode}
	</delete>
      
	
	<select id="boardLikeCount" parameterType="Long" resultType="Integer">
		SELECT COUNT(*) FROM pick WHERE communityNum=#{communityNum}
	</select>

	
	<select id="userBoardLiked" parameterType="map" resultType="com.moumi.app.board.Board">
		SELECT communityNum, userCode FROM pick WHERE communityNum = #{communityNum} AND userCode = #{userCode}
	</select>
	<select id="rseq" resultType="Long">
		SELECT replyNum_seq.NEXTVAL FROM dual
	</select>
	
	<insert id="insertReply" parameterType="com.moumi.app.board.Reply">
		INSERT INTO reply(replyNum,content,regDate,userCode,parent,communityNum) 
		 VALUES(#{replyNum}, #{content},SYSDATE,#{userCode},#{parent},#{communityNum})
	</insert>
	
	<insert id="replyFile" parameterType="com.moumi.app.board.Reply">
		INSERT INTO replyFile(fileNum,replyNum,fileName)
			VALUES(replyFile_seq.NEXTVAL,#{replyNum},#{fileName, jdbcType=VARCHAR})
	</insert>
	
	<select id="replyCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM reply
		WHERE communityNum=#{communityNum} AND parent=0
	</select>
	
	<select id="listReply" parameterType="map" resultType="com.moumi.app.board.Reply">
		SELECT r.replyNum, r.userCode,m.nickName,r.communityNum, content, r.regDate, 
			    NVL(answerCount, 0) answerCount,
			    NVL(likeCount, 0) likeCount,
			    NVL(disLikeCount, 0) disLikeCount,fileName
		FROM reply r
		JOIN member m ON r.userCode = m.userCode
		LEFT OUTER JOIN replyFile rf ON r.replyNum = rf.replyNum
		LEFT OUTER JOIN (
			SELECT parent, COUNT(*) answerCount
			FROM reply
			WHERE parent!=0
			GROUP BY parent
		) a ON r.replyNum = a.parent
		LEFT OUTER JOIN (
			SELECT replyNum, COUNT(DECODE(answerLike, 1, 1)) likeCount,
				   COUNT(DECODE(answerLike, 0, 1)) disLikeCount
			FROM replyLike GROUP BY replyNum
		) c ON r.replyNum = c.replyNum
		WHERE communityNum=#{communityNum} AND r.parent=0
		ORDER BY r.replyNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<delete id="deleteReply" parameterType="map">
		DELETE FROM reply
		WHERE replyNum=#{replyNum}
		<if test="mode=='reply'">
			OR parent=#{replyNum}
		</if>
	</delete>
	
	<select id="listReplyAnswer" parameterType="map" resultType="com.moumi.app.board.Reply">
		SELECT r.replyNum, r.communityNum, r.userCode, m.nickName, content, r.regDate, parent,fileName
		FROM reply r
		JOIN member m ON r.userCode = m.userCode
		LEFT OUTER JOIN replyFile rf ON r.replyNum = rf.replyNum
		WHERE parent = #{parent}
		ORDER BY replyNum DESC
	</select>
	<select id="replyAnswerCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM reply
		WHERE parent = #{parent}
	</select>
	
	<!-- 좋아요/싫어요 추가 -->
	<insert id="insertReplyLike" parameterType="map">
		INSERT INTO replyLike(replyNum, userCode, answerLike)
		VALUES (#{replyNum}, #{userCode}, #{answerLike})
	</insert>
	
	<!-- 좋아요/싫어요 개수 -->
	<select id="replyLikeCount" parameterType="map" resultType="map">
		SELECT COUNT(DECODE(answerLike, 1, 1)) likeCount,
			   COUNT(DECODE(answerLike, 0, 1)) disLikeCount
		FROM replyLike WHERE replyNum = #{replyNum}
	</select>
	<insert id="insertNotify" parameterType="com.moumi.app.board.Board">
		INSERT INTO replyStop(stopNum,replyNum,notifyContent,userCode,parent)
			VALUES(commentStop_seq.NEXTVAL,#{replyNum},#{notifyContent},#{userCode},#{parent})
	</insert>
	<insert id="insertNotifyStatus">
		INSERT INTO replyStatus(stopNum,status) VALUES(commentStop_seq.CURRVAL,0)
	</insert>
	
	<select id="readReplyNum" parameterType="Long" resultType="Integer">
		SELECT replyNum
		FROM reply
		WHERE replyNum = #{replyNum}
	</select>
	
</mapper>